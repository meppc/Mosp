---
description: 
globs: 
alwaysApply: true
---
# Development Guidelines

## Getting Started

### Environment Setup
1. Install Rust:
```bash
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
```

2. System Dependencies:
- **macOS**: `brew install cmake`
- **Linux**: `sudo apt-get install cmake build-essential`
- **Windows**: Install Visual Studio Build Tools and CMake

### Build and Run
1. Build: `cargo build`
2. Run: `cargo run`

## Contribution Workflow
1. Fork the project
2. Create a feature branch
3. Make changes
4. Push to branch
5. Create Pull Request

## Code Organization
- Keep UI components in [ui/](mdc:ui)
- Core logic goes in [src/](mdc:src)
- Add tests in [tests/](mdc:tests)
- Update documentation in [docs/](mdc:docs)

## Best Practices
- Follow Rust idioms and conventions
- Write comprehensive tests
- Document public APIs
- Keep UI components modular
- Optimize for performance where critical

For detailed coding standards, refer to [docs/code.md](mdc:docs/code.md)